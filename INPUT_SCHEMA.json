{
    "title": "Runs monitor",
    "type": "object",
    "schemaVersion": 1,
    "required": ["config"],
    "properties": {
        "config": {
            "title": "Configuration",
            "description": "actorId - ID of actor, minDatasetItems - consider run with less items in dataset as failed, maxRunTimeSecs - consider actor runnning longer than this as failed",
            "prefill": [{ "actorId": "XXX", "minDatasetItems": 0, "maxRunTimeSecs": 3600 }],
            "example": [{ "actorId": "actorId", "minDatasetItems": 0, "maxRunTimeSecs": 3600 }],
            "type": "array",
            "editor": "json",
            "nullable": false,
            "minItems": 1
        },
        "slackApiKey": {
            "title": "Slack API key",
            "description": "API key to your Slack",
            "type": "string",
            "editor": "textfield",
            "example": "my-secret-key",
            "nullable": true
        },
        "slackChannel": {
            "title": "Slack channel name",
            "description": "The name of Slack channel where the message should be posted",
            "type": "string",
            "editor": "textfield",
            "example": "#actor-notifications",
            "nullable": true
        },
        "emails": {
            "title": "Emails",
            "description": "List of emails to send a message to, this field is optional",
            "type": "array",
            "editor": "stringList",
            "uniqueItems": true,
            "example": [ "john.doe@example.com" ]
        },
        "inputMask": {
            "title": "Input mask",
            "description": "Check only those runs that contain anything from given JSON on their input",
            "type": "object",
            "editor": "json",
            "nullable": true,
            "example": { "testRun": true }
        },
        "ignoreByInputMask": {
            "title": "Skip runs matched by input mask",
            "description": "If checked then runs matched by input mask will be skipped",
            "type": "boolean",
            "editor": "checkbox",
            "default": false
        },
        "schema": {
            "title": "JSON schema",
            "description": "JSON schema to validate every dataset item with",
            "type": "object",
            "editor": "json",
            "nullable": true,
            "example": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "price",
                  "description"
                ],
                "properties": {
                  "id": {
                    "$id": "#/properties/id",
                    "type": "integer",
                    "title": "The Id Schema",
                    "examples": [ 1234 ]
                  },
                  "name": {
                    "$id": "#/properties/name",
                    "type": "string",
                    "title": "The Name Schema",
                    "examples": [ "example" ],
                    "pattern": "^(.*)$"
                  },
                  "price": {
                    "$id": "#/properties/price",
                    "type": "number",
                    "title": "The Price Schema",
                    "examples": [ 12.34 ]
                  },
                  "description": {
                    "$id": "#/properties/description",
                    "type": "string",
                    "title": "The Description Schema",
                    "default": "",
                    "examples": [ "This is a description of example item" ]
                  }
                }
              }
        }
    }
}
